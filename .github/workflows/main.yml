name: Deploy
on:
  push:
    branches:
      - main
  schedule:
    - cron:  '0 * * * *'
jobs:
  publish:
    runs-on: ubuntu-latest
    container:
        image: texlive/texlive
    defaults:
      run:
        working-directory: ./
    steps:
      - name: Articles
        uses: actions/checkout@v2
        with:
          repository: ricosjp/Articles
          path: Articles
      - name: WorkRules
        uses: actions/checkout@v2
        with:
          repository: ricosjp/WorkRules
          path: WorkRules
      - name: organization
        uses: actions/checkout@v2
        with:
          repository: ricosjp/rules_organization
          path: organization
      - name: research
        uses: actions/checkout@v2
        with:
          repository: ricosjp/rules_research
          path: research
      - name: safety
        uses: actions/checkout@v2
        with:
          repository: ricosjp/rules_safety
          path: safety
      - name: libfaketime
        run: |
          apt-get update && apt-get -y install gcc jq
          git clone https://github.com/wolfcw/libfaketime.git
          cd libfaketime/src && make install
          cd - && rm -fr libfaketime
      - name: build
        run: |
          export LD_PRELOAD=/usr/local/lib/faketime/libfaketime.so.1
          export TZ=Asia/Tokyo
          for d in */ ; do
            mkdir -p ./public/$d
            cd $d
            FAKETIME=$(git log --date=iso --date=iso-local --pretty=format:"%ad" -1) make -j
            find . -name '*.pdf' | xargs -I% mv % ../public/$d
            cd -
            for name in `ls public/$d`; do echo "<a href=./$name>$name</a><br>" >> public/$d/index.html; echo "$name" >> public/$d/list.txt; done
          done
      - name: index
        run: |
          cd public
          echo { >> files.json
          for d in $(ls -d */|sed 's/\///g'|sort); do
            repo=$(find ../$d -name "README.md"|xargs grep ^#|head -n1|sed -e 's/#[ ]*//')
            repo=$(echo $repo|sed -e 's/^[ ]*//')
            echo "## " $repo     >> index.md
            echo "$d:"           >> files.yaml
            echo "  name: $repo" >> files.yaml
            echo "  path: $d"    >> files.yaml
            echo "  data:"       >> files.yaml
            echo '"'$d'"': {'"'name'"':'"'$repo'"','"'path'"':'"'$d'"','"'data'"':{ >> files.json
            for path in $(find $d -name '*.pdf'|sort); do
              name=$(find ../$d -name "$(basename $path .pdf)*"|xargs grep \title{| sed -e "s/^.*{\(.*\)}.*$/\1/" -e 's/\\\\/ /')
              name=$(echo $name|sed -e 's/^[ ]*//')
              bpath=$(basename $path)
              echo "- [$name]($path)"  >> index.md
              echo "    $name:"        >> files.yaml
              echo "      name: $name" >> files.yaml
              echo "      path: $bpath">> files.yaml
              echo '"'$name'"':{'"name":''"'$name'"', '"path":''"'$bpath'"'}, >> files.json
            done
            sed -i -e '$ s/,$/}},/' files.json
            echo >> index.md
          done
          sed -i -e '$ s/,$/}/' files.json
          cat files.json | jq -c > files2.json
          mv files2.json files.json
      - name: Rules
        uses: actions/checkout@v2
        with:
          path: rules
      - name: copy
        run: |
          cat ./public/index.md >> ./rules/index.md
          cp -uprv ./rules/* ./public/
      - name: pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: public
          enable_jekyll: true
          force_orphan: true
          cname: rules.ricos.co.jp
